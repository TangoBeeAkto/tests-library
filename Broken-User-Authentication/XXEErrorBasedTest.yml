id: XXE_ERROR_BASED_TEST
info:
  name: "XML Error Based Vulnerability test in API Endpoints"
  description: >
    "This test can be used for improper error handling in XML parsing that could expose sensitive information or system details."
  details: >
    "This test aims to identify vulnerabilities where error responses in XML processing 
    could inadvertently reveal critical system insights or data."
  impact: >
    "Inadequate handling of XML parsing errors can lead to information leaks and security breaches, significantly compromising the confidentiality and integrity of the API."
  category:
    name: NO_AUTH
    shortName: Broken Authentication
    displayName: Broken User Authentication (BUA)
  subCategory: XXE_ERROR_BASED_TEST
  severity: HIGH
  tags:
    - Business logic
    - OWASP top 10
    - HackerOne top 10
  references:
    - "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/"
    - "https://github.com/OWASP/API-Security/blob/master/editions/2023/en/0xa2-broken-authentication.md"
    - "https://cheatsheetseries.owasp.org/cheatsheets/Authentication_Cheat_Sheet.html"
  cwe:
    - CWE-287
  cve:
    - CVE-2020-24008
    - CVE-2021-45901
api_selection_filters:
  response_code:
    gte: 200
    lt: 300
  response_payload:
    length:
      gt: 0
    not_contains:
      - Error
      - Internal Server 
      - Failed
      - Unauthorized
      - access denied
      - Forbidden
      - Method Not allowed
      - Gateway timeout
      - request timeout
      - server error
      - server busy
      - authentication error
      - authorization error
      - validation error
      - Permission Denied
      - invalid token
      - token expired
      - session expired
      - session timeout
      - unexpected error
      - unable to process request
      - bad request
      - service unavailable
      - account is locked
      - account is blocked
      - multiple failed attempts
  request_headers:
    for_one:
      key:
        contains_either:
          - content-type
          - Content-Type
        extract: headerKey
  method:
    contains_either:
      - POST
      - PUT
      - PATCH
wordLists:
  payloads:
    - "<!DOCTYPE foo [<!ENTITY xxe SYSTEM \"file:///nonexistent\">]>"
execute:
  type: single
  requests:
    - req:
        - replace_body:  ${payloads}
        - modify_header:
            ${headerKey}: "application/xml"
validate:
  and:
    - response_payload:
        length:
          gt: 0
    - response_payload:
        regex: "(cannot|could not|unable to|no such|failed to)"
    - response_payload:
        regex: "(find|locate|open|access|read)"
    - response_payload:
        regex: "(the )?(file|directory|path)"    